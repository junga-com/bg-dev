#!/bin/bash

###############################################################################
# Includes and defines

packageName=bg-dev

source /usr/lib/bg_core.sh
import bg_bashParse.sh ;$L1;$L2

cmdSyntax="<cmd>|buildDeps|raw"

###############################################################################
# Functions

# this oob callback provides bash command line completion (BC) for positional parameters
# See man(3) invokeOutOfBandSystem
function oob_printBashCompletion()
{
	local -A clInput; bgBCParse -RclInput "$cmdSyntax" "$@"; shift "$((${clInput[shiftCount]}+2))"
	cmd="$1"; shift; ((posCwords--))

	case $cmd:$posCwords in
	esac
}


# Use this function to provide BC suggestions for positional parameters
# see man bg-overviewOutOfBandScriptFunctions for details
function oob_helpMode()
{
	local -A clInput; bgCmdlineParse -RclInput "<cmd>" "$@"
	case ${clInput[cmd]:-main} in
		main)  man "$(basename $0)" ;;
		*)     man "$(basename $0)" ;;
	esac
}

###############################################################################
# Main script

# default values for options
verbosity=1
invokeOutOfBandSystem "$@"
while [ $# -gt 0 ]; do case $1 in
	-v|--verbose) ((verbosity++)) ;;
	-q|--quiet) ((verbosity--)) ;;
	--verbosity*) bgOptionGetOpt val: verbosity "$@" && shift ;;
	*)  bgOptionsEndLoop "$@" && break; set -- "${bgOptionsExpandedOpts[@]}"; esac; shift;
done
cmd="$1"; shift

case ${cmd:-buildDeps} in
	buildDeps) bparse_build "$@" ;;
	raw)       bparse_raw   "$@" ;;
	*) assertError -v cmd "unknown sub command"
esac
